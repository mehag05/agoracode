{"version":3,"file":"static/js/368.6ae5e6dd.chunk.js","mappings":"uNAOA,MAsDA,EAtD+BA,MACVC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAkB,IAAIC,gBAoB5B,MAlBiCC,WAC7B,IACI,MAAM,KAAEC,EAAI,QAAEC,EAAO,MAAEC,SAAgBC,EAAAA,EAAAA,KACvC,GAAIH,GAAQA,EAAKI,eAAgB,CAEV,aADDC,EAAAA,EAAMC,KAAK,wCAAyD,CAAEC,OAAQP,EAAKI,eAAgBI,UAAU,KACvHC,OACJC,QAAQC,IAAI,kDAEZD,QAAQR,MAAM,wCAEtB,CACJ,CAAE,MAAOA,GACLQ,QAAQR,MAAM,uDAAwDA,EAC1E,GAGJU,GAEO,KACHf,EAAgBgB,OAAO,CAC1B,GACF,IAMH,OACIC,EAAAA,EAAAA,KAAA,OACIC,UAAU,yDACVC,MAAO,CAAEC,gBAAiB,OAAQC,gBAAiB,SAAUC,UAE7DC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,gDAA+CI,SAAA,EAC1DL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCI,SAAC,+CAClDL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BI,SAAC,0EAC1CL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOI,UAClBL,EAAAA,EAAAA,KAACO,EAAAA,KAAI,CACDC,GAAG,IACHP,WAAWQ,EAAAA,EAAAA,GAAe,CAAEC,QAAS,cAAeL,SACvD,qBAKP,C","sources":["pages/VerifyEmailSuccessPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { buttonVariants } from '../components/ui/button';\nimport { FetchUser } from '../utils/fetchUser'; // Adjust the import path as needed\nimport axios from 'axios'; // Ensure axios is imported\nimport { Link } from 'react-router-dom';\n\nconst VerifyEmailSuccessPage = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const abortController = new AbortController(); // Create an AbortController instance\n\n        const updateVerificationStatus = async () => {\n            try {\n                const { user, loading, error } = await FetchUser(); // Fetch the user\n                if (user && user.supertokens_id) {\n                    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/verify-user`, { userId: user.supertokens_id, verified: true });\n                    if (res.status === 200) {\n                        console.log(\"User verification status updated successfully.\");\n                    } else {\n                        console.error(\"Failed to update verification status.\");\n                    }\n                }\n            } catch (error) {\n                console.error(\"Error fetching user or updating verification status:\", error);\n            }\n        };\n\n        updateVerificationStatus();\n\n        return () => {\n            abortController.abort(); // Cleanup function to abort the request\n        };\n    }, []);\n\n    const handleGoHome = () => {\n        navigate('/');\n    };\n\n    return (\n        <div\n            className=\"flex flex-col items-center justify-center min-h-screen\"\n            style={{ backgroundImage: 'none', backgroundColor: 'white' }}\n        >\n            <div className=\"bg-white rounded-lg shadow-lg p-8 text-center\">\n                <h1 className=\"text-3xl font-bold text-[#5c1a99]\">ðŸŽ‰ Email Verified Successfully!</h1>\n                <p className=\"mt-4 text-gray-700 text-lg\">Thank you for verifying your email. You can now access all features.</p>\n                <div className=\" mt-6\">\n                    <Link\n                        to=\"/\"\n                        className={buttonVariants({ variant: 'bigpurple' })}\n                    >\n                        Go to Home\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default VerifyEmailSuccessPage;\n"],"names":["VerifyEmailSuccessPage","useNavigate","useEffect","abortController","AbortController","async","user","loading","error","FetchUser","supertokens_id","axios","post","userId","verified","status","console","log","updateVerificationStatus","abort","_jsx","className","style","backgroundImage","backgroundColor","children","_jsxs","Link","to","buttonVariants","variant"],"sourceRoot":""}