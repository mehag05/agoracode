{"version":3,"file":"static/js/610.bdd951b7.chunk.js","mappings":"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","sources":["components/Settings.tsx"],"sourcesContent":["'use client'\nimport { Button } from './ui/button'\nimport { IUser } from '../schema/user'\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Spinner from './Spinner'\n\nconst UserProfile = ({ user }: { user: IUser | null }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [firstName, setFirstName] = useState(user?.firstName || '');\n  const [lastName, setLastName] = useState(user?.lastName || '');\n  const [deliveryLocation, setDeliveryLocation] = useState(user?.deliveryLocation || '');\n  const [customLocation, setCustomLocation] = useState(user?.customLocation || '');\n\n  const userId = user?.supertokens_id;\n\n  // Fetch user data on component mount\n  useEffect(() => {\n    const abortController = new AbortController(); // Create an AbortController instance\n    const fetchUserData = async () => {\n      if (userId) {\n        try {\n          const response = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/user/${userId}`);\n          setFirstName(response.data.firstName);\n          setLastName(response.data.lastName);\n          setDeliveryLocation(response.data.deliveryLocation);\n          setCustomLocation(response.data.customLocation);\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      }\n    };\n\n    fetchUserData();\n\n    return () => {\n      abortController.abort(); // Cleanup function to abort the request\n    };\n  }, [userId]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Custom Location before submit:', customLocation);\n    const requestData = {\n      deliveryLocation: deliveryLocation,\n      customLocation: (deliveryLocation === 'Off campus residence' || deliveryLocation === 'Dorm Room') ? customLocation : '',\n    };\n    console.log('Request Data:', requestData);\n    const sessionToken = localStorage.getItem('sessionToken'); // Adjust as necessary\n    try {\n      const response = await axios.put(`${process.env.REACT_APP_API_BASE_URL}/api/settings`, requestData, {\n        headers: {\n          'Authorization': `Bearer ${sessionToken}`,\n        },\n      });\n      console.log('Profile updated successfully:', response.data);\n      window.location.reload();\n      // Update the local state with the new user data\n      setFirstName(response.data.firstName);\n      setLastName(response.data.lastName);\n      setDeliveryLocation(response.data.deliveryLocation);\n      setCustomLocation(response.data.customLocation);\n      \n      setIsEditing(false); // Optionally close the editing mode\n    } catch (error) {\n      console.error('Failed to update profile:', error);\n    }\n  }\n\n  if (!user) return <div><Spinner/></div>\n  \n  return (\n    <div className=\"max-w-2xl mx-auto mt-10 p-6 bg-white shadow-md rounded-lg\">\n      <h1 className=\"text-2xl font-bold mb-6\">Account Profile</h1>\n      \n      <div className=\"space-y-4\">\n        <div>\n          <label className=\"font-semibold\">Email:</label>\n          <p>{user.email}</p>\n        </div>\n\n        {isEditing ? (\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <>\n                <div>\n                  <label className=\"font-semibold\">Delivery Location:</label>\n                  <select\n                    value={deliveryLocation}\n                    onChange={(e) => setDeliveryLocation(e.target.value)}\n                    className=\"w-full p-2 border rounded\"\n                  >\n                    <option value=\"\">Select a location</option>\n                    <option value=\"Off campus residence\">Off campus residence</option>\n                    <option value=\"Rodin Office\">Rodin Office</option>\n                    <option value=\"Harrison Office\">Harrison Office</option>\n                    <option value=\"Harnwell Office\">Harnwell Office</option>\n                    <option value=\"Dorm Room\">Dorm Room</option>\n                    <option value=\"Hill Office\">Hill Office</option>\n                    <option value=\"Lauder Office\">Lauder Office</option>\n                    <option value=\"Guttman Office\">Guttman Office</option>\n                  </select>\n                </div>\n                {(deliveryLocation === 'Off campus residence' || deliveryLocation === 'Dorm Room') && (\n                  <div>\n                    <label className=\"font-semibold\">\n                      {deliveryLocation === 'Dorm Room' ? 'Dorm Room' : `${deliveryLocation} Address`}:\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={customLocation}\n                      onChange={(e) => setCustomLocation(e.target.value)}\n                      className=\"w-full p-2 border rounded\"\n                    />\n                  </div>\n                )}\n              </>\n            <Button type=\"submit\" variant=\"bigpurple\">Save Changes</Button>\n            <Button type=\"button\" variant=\"outline\" onClick={() => setIsEditing(false)}>Cancel</Button>\n          </form>\n        ) : (\n          <>\n            <div>\n              <label className=\"font-semibold\">First Name:</label>\n              <p>{user.firstName || 'Not set'}</p>\n            </div>\n            <div>\n              <label className=\"font-semibold\">Last Name:</label>\n              <p>{user.lastName || 'Not set'}</p>\n            </div>\n              <>\n                <div>\n                  <label className=\"font-semibold\">Delivery Location:</label>\n                  <p>{user.deliveryLocation || 'Not set'}</p>\n                  {(user.deliveryLocation === 'Off campus residence' || user.deliveryLocation === 'Dorm Room') && (\n                    <p>{user.customLocation || 'Not set'}</p>\n                  )}\n                </div>\n              </>\n            <Button variant=\"bigpurple\" onClick={() => setIsEditing(true)}>Edit Profile</Button>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default UserProfile"],"names":["_ref","user","isEditing","setIsEditing","useState","firstName","setFirstName","lastName","setLastName","deliveryLocation","setDeliveryLocation","customLocation","setCustomLocation","userId","supertokens_id","useEffect","abortController","AbortController","async","response","axios","get","data","error","console","fetchUserData","abort","_jsxs","className","children","_jsx","email","onSubmit","e","preventDefault","log","requestData","sessionToken","localStorage","getItem","put","headers","window","location","reload","_Fragment","value","onChange","target","type","Button","variant","onClick","Spinner"],"sourceRoot":""}