{"version":3,"file":"static/js/350.f52a7d99.chunk.js","mappings":"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","sources":["components/ui/input.tsx","components/ui/label.tsx","pages/PasswordResetPage.tsx","auth/submit_newpassword.ts"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","'use client'\nimport { Icons } from '../components/Icons'\nimport { Button } from '../components/ui/button'\nimport React, { useState } from 'react'\nimport { Input } from '../components/ui/input'\nimport { Label } from '../components/ui/label'\nimport { toast } from 'sonner'\nimport { useNavigate } from 'react-router-dom'\nimport { newPasswordEntered } from '../auth/submit_newpassword' // Import your reset password function\n\nconst ResetPasswordPage = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  const onSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    \n    // Call your reset password function\n    try {\n      await newPasswordEntered(newPassword); // This function handles errors and responses\n  \n      toast.success('Password reset successfully.');\n      navigate('/signin'); // Redirect to sign-in page after successful reset\n    } catch (error: any) {\n      // Handle any unexpected errors here if necessary\n      const errorMessage = error.isSuperTokensGeneralError ? error.message : 'Oops! Something went wrong.';\n      toast.error(errorMessage);\n    }\n  };\n\n  return (\n    <>\n      <div className='relative flex pt-20 flex-col items-center justify-center'>\n        <div className='mx-auto flex w-full max-w-md flex-col justify-center space-y-6'>\n          <div className='flex flex-col items-center space-y-2 text-center'>\n            <Icons.logo className='h-15 w-20' />\n            <h1 className='text-2xl font-semibold tracking-tight'>\n              Reset your password\n            </h1>\n          </div>\n\n          <div className='grid gap-6'>\n            <form onSubmit={onSubmit}>\n              <div className='grid gap-2'>\n                {/* New Password Input */}\n                <div className='grid gap-1 py-2'>\n                  <Label htmlFor='newPassword'>New password</Label>\n                  <Input\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                    type={showPassword ? 'text' : 'password'}\n                    className='w-full max-w-md px-4'\n                    placeholder='New Password'\n                  />\n                </div>\n\n                {/* Confirm Password Input */}\n                <div className='grid gap-1 py-2'>\n                  <Label htmlFor='confirmPassword'>Confirm Password</Label>\n                  <Input\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    type={showPassword ? 'text' : 'password'}\n                    className='w-full max-w-md px-4'\n                    placeholder='Confirm Password'\n                  />\n                </div>\n\n                {/* Show Password Button */}\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className='text-sm text-blue-500'\n                >\n                  {showPassword ? 'Hide' : 'Show'} Password\n                </button>\n\n                <Button variant=\"bigpurple\" type=\"submit\" className='w-full max-w-md px-4'>\n                  Reset Password\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ResetPasswordPage;","import { submitNewPassword } from \"supertokens-web-js/recipe/emailpassword\";\n\nexport async function newPasswordEntered(newPassword: string) {\n    try {\n        const response = await submitNewPassword({\n            formFields: [{\n                id: \"password\",\n                value: newPassword\n            }]\n        });\n\n        if (response.status === \"FIELD_ERROR\") {\n            response.formFields.forEach(formField => {\n                if (formField.id === \"password\") {\n                    // New password did not meet password criteria on the backend.\n                    window.alert(formField.error)\n                }\n            })\n        } else if (response.status === \"RESET_PASSWORD_INVALID_TOKEN_ERROR\") {\n            // the password reset token in the URL is invalid, expired, or already consumed\n            window.alert(\"Password reset failed. Please try again\")\n            window.location.assign(\"auth/signin\") // back to the login screen.\n        } else {\n            window.alert(\"Password reset successful!\")\n            window.location.assign(\"auth/signin\")\n        }\n    } catch (err: any) {\n        if (err.isSuperTokensGeneralError === true) {\n            // this may be a custom error message sent from the API by you.\n            window.alert(err.message);\n        } else {\n            window.alert(\"Oops! Something went wrong.\");\n        }\n    }\n}"],"names":["Input","React","_ref","ref","className","type","props","_jsx","cn","displayName","labelVariants","cva","Label","LabelPrimitive","ResetPasswordPage","newPassword","setNewPassword","useState","confirmPassword","setConfirmPassword","showPassword","setShowPassword","navigate","useNavigate","_Fragment","children","_jsxs","Icons","logo","onSubmit","async","event","preventDefault","response","submitNewPassword","formFields","id","value","status","forEach","formField","window","alert","error","location","assign","err","isSuperTokensGeneralError","message","newPasswordEntered","toast","success","errorMessage","htmlFor","onChange","e","target","placeholder","onClick","Button","variant"],"sourceRoot":""}