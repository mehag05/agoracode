{"version":3,"file":"static/js/836.4a735c74.chunk.js","mappings":"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","sources":["components/AddToCartButton.tsx","pages/ProductDetails.tsx"],"sourcesContent":["'use client'\nimport React from 'react'\nimport { useEffect, useState } from 'react'\nimport { Button } from './ui/button'\nimport { useCart } from '../hooks/useCart'\nimport { IProduct } from '../schema/Product'\nimport { buttonVariants } from '../components/ui/button'\nimport { IUser } from '../schema/user'\n\nconst AddToCartButton = ({\n  product,\n  user\n}: {\n  product: IProduct\n  user: IUser\n}) => {\n  const { addItem } = useCart()\n  const [isSuccess, setIsSuccess] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (isSuccess) { // Only set the timeout if isSuccess is true\n      const timeout = setTimeout(() => {\n        setIsSuccess(false)\n      }, 2000)\n\n      return () => clearTimeout(timeout)\n    }\n  }, [isSuccess]) // Keep isSuccess as a dependency to clear the timeout if it changes\n\n  return (\n    // TODO: add inventory amount so only one product can be added\n    <Button\n      onClick={() => {\n        console.log(product.user)\n        console.log(user.supertokens_id)\n        addItem(product, user.supertokens_id)\n        setIsSuccess(true)\n      }}\n      size='lg'\n      className={buttonVariants({ variant: 'bigpurple' }) + ' w-full'}>\n      {isSuccess ? 'Added!' : 'Add to cart'}\n    </Button>\n )\n}\n\nexport default AddToCartButton","import AddToCartButton from '../components/AddToCartButton'\nimport ImageSlider from '../components/ImageSlider'\nimport MaxWidthWrapper from '../components/MaxWidthWrapper'\nimport ProductReel from '../components/ProductReel'\nimport { formatPrice } from '../lib/utils'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport React, { useEffect, useState, useMemo } from 'react'\nimport { IProduct } from '../schema/Product'\nimport { FetchUser } from 'utils/fetchUser'\nimport { Button } from 'components/ui/button'\nimport Spinner from 'components/Spinner'\n\n// TODO: Make this import universal\nconst PRODUCT_CATEGORIES = [\n    { value: 'clothing-item', label: 'Clothing Item' },\n    { value: 'accessories', label: 'Accessories' },\n    { value: 'dorm-item', label: 'Dorm Item' },\n    { value: 'shoes', label: 'Shoes' },\n    { value: 'event-ticket', label: 'Event Ticket' },\n    { value: 'other', label: 'Other' },\n    { value: 'lease', label: 'Lease' },\n  ];\n\nconst BREADCRUMBS = [\n  { id: 1, name: 'Home', href: '/' },\n  { id: 2, name: 'Products', href: '/products' },\n]\n\ninterface Image {\n  image: string | { url: string }\n}\n\nconst ProductDetails = () => {\n  const { id: productId } = useParams(); // Extract productId from URL parameters\n  const [product, setProduct] = React.useState<IProduct | null>(null);\n  const [loading, setLoading] = React.useState(true);\n  const [notFound, setNotFound] = React.useState(false);\n  const [error, setError] = React.useState<string | null>(null);\n  const { user, loading: userLoading, error: userError } = FetchUser()\n\n  React.useEffect(() => {\n    const abortController = new AbortController(); // Create an AbortController instance\n    const fetchProductData = async () => {\n      console.log(`Fetching product with ID: ${productId}`); // Debugging log\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/product/${productId}`);\n        if (response.status === 200 && response.data) {\n          setProduct(response.data);\n        } else {\n          setNotFound(true);\n        }\n      } catch (error) {\n        console.error('Error fetching product:', error); // Log the error for debugging\n        setError('Error fetching the product. Please try again later.');\n        setNotFound(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProductData();\n\n    return () => {\n      abortController.abort(); // Cleanup function to abort the request\n    };\n  }, [productId]);\n  \n  // Memoize the label based on the product category\n  const label = useMemo(() => {\n    return PRODUCT_CATEGORIES.find(({ value }) => value === product?.category)?.label;\n  }, [product?.category]); // Recompute when product category changes\n\n  // Memoize valid URLs for images\n  const validUrls = useMemo(() => {\n    if (!product || !product.images) return []; // Return an empty array if product or images are not available\n    return product.images\n      .map((image: Image) => (typeof image.image === 'string' ? image.image : image.image.url))\n      .filter(Boolean) as string[];\n  }, [product]); // Recompute when product changes\n\n  if (loading || userLoading) return <div><Spinner/></div>;\n  if (notFound) return <div>{error || 'Product not found.'}</div>;\n\n  return (\n    <MaxWidthWrapper className='bg-white'>\n      <div className='bg-white'>\n        <div className='mx-auto max-w-2xl px-4 py-16 sm:px-6 sm:py-24 lg:grid lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8'>\n          {/* Product Details */}\n          <div className='lg:max-w-lg lg:self-end'>\n            <ol className='flex items-center space-x-2'>\n              {BREADCRUMBS.map((breadcrumb, i) => (\n                <li key={breadcrumb.href}>\n                  <div className='flex items-center text-sm'>\n                    <a\n                      href={breadcrumb.href}\n                      className='font-medium text-sm text-muted-foreground hover:text-gray-900'>\n                      {breadcrumb.name}\n                    </a>\n                    {i !== BREADCRUMBS.length - 1 ? (\n                      <svg\n                        viewBox='0 0 20 20'\n                        fill='currentColor'\n                        aria-hidden='true'\n                        className='ml-2 h-5 w-5 flex-shrink-0 text-gray-300'>\n                        <path d='M5.555 17.776l8-16 .894.448-8 16-.894-.448z' />\n                      </svg>\n                    ) : null}\n                  </div>\n                </li>\n              ))}\n            </ol>\n\n            <div className='mt-4'>\n              <h1 className='text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl'>\n                {product?.name}\n              </h1>\n            </div>\n\n            <section className='mt-4'>\n              <div className='flex items-center'>\n                <p className='font-medium text-gray-900'>\n                  {product ? formatPrice(product.price) : 'N/A'}\n                </p>\n\n                <div className='ml-4 border-l text-muted-foreground border-gray-300 pl-4'>\n                  {label || 'N/A'}\n                </div>\n\n                {/* Display size if product is a clothing item */}\n                {product?.category === 'clothing-item' && product?.size && (\n                  <div className='ml-4 border-l text-muted-foreground border-gray-300 pl-4'>\n                    Size: {product.size}\n                  </div>\n                )}\n              </div>\n\n              <div className='mt-4 space-y-6'>\n                <p className='text-base text-muted-foreground'>\n                  {product?.description}\n                </p>\n              </div>\n            </section>\n          </div>\n\n          {/* Product images */}\n          <div className='mt-10 lg:col-start-2 lg:row-span-2 lg:mt-0 lg:self-center'>\n            <div className='aspect-square rounded-lg'>\n              <ImageSlider urls={validUrls} />\n            </div>\n          </div>\n\n          {/* add to cart part */}\n          <div className='mt-10 lg:col-start-1 lg:row-start-2 lg:max-w-lg lg:self-start'>\n            <div>\n              <div className='mt-10'>\n                {product && user&& <AddToCartButton product={product} user={user} />}\n              </div>\n            </div>\n          </div>\n          <div className='mt-10 lg:col-start-1 lg:row-start-2 lg:max-w-lg lg:self-start'>\n            <div>\n              <div className='mt-10'>\n                {!user && <Button variant='bigpurple' onClick={() => window.location.href = '/auth/signin'}>Sign in to add to cart</Button>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ProductReel\n        href={`/products`}\n        title={`Similar ${label}`}\n        subtitle={`Browse Similar ${label} just like '${product?.name}'`}\n        textColor='gray'\n      />\n    </MaxWidthWrapper>\n  )\n}\n\nexport default ProductDetails"],"names":["_ref","product","user","addItem","useCart","isSuccess","setIsSuccess","useState","useEffect","timeout","setTimeout","clearTimeout","_jsx","Button","onClick","console","log","supertokens_id","size","className","buttonVariants","variant","children","PRODUCT_CATEGORIES","value","label","BREADCRUMBS","id","name","href","ProductDetails","productId","useParams","setProduct","React","loading","setLoading","notFound","setNotFound","error","setError","userLoading","userError","FetchUser","abortController","AbortController","async","response","axios","get","status","data","fetchProductData","abort","useMemo","_PRODUCT_CATEGORIES$f","find","category","validUrls","images","map","image","url","filter","Boolean","Spinner","_jsxs","MaxWidthWrapper","breadcrumb","i","length","viewBox","fill","d","formatPrice","price","description","ImageSlider","urls","AddToCartButton","window","location","ProductReel","title","subtitle","textColor"],"sourceRoot":""}